spring:
  application:
    name: cabin-oauth2
server:
  port: 9002
#logging:
#  level:
#    org.apache.catalina: debug
---
#admin监控
spring:
  boot:
    admin:
      client:
        url: http://${admin_host:127.0.0.1}:9001
        username: user
        password: zhangyang
# 开启监控所有项
management:
  endpoints:
    web:
      exposure:
        include: "*"
---
# 数据库
spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${host}:3306/cabin?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false&serverTimezone=Asia/Shanghai
    username: ${mysql_username}
    password: ${mysql_password}
  jpa:
    hibernate:
      ddl-auto: update
      # create：每次启动时都重新创建数据库表结构，这会导致现有数据的清除。
      # create-drop：在应用程序关闭时删除数据库表结构。
      # validate：验证实体类与数据库表结构是否一致，不一致则抛出异常。
      # update：根据实体类更新数据库表结构。
      # none：不自动处理。
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect # 使用的数据库方言
        show_sql: true # 显示执行的 SQL 语句。
        format_sql: true # 格式化 SQL 语句以便阅读
  data:
    redis:
      host: ${host}
      password: ${redis_password}
---
# mq
spring:
  rabbitmq:
    host: ${host}
    port: 5672
    username: ${rabbitmq_username}
    password: ${rabbitmq_password}
    listener:
      direct:
        acknowledge-mode: manual

---
# 邮箱配置
spring:
  mail:
    host: smtp.qq.com #邮件服务器地址
    #端口号 smtp 25 465 pop3 110 995 imap 143 993
    # 阿里云默认封禁25,建议465
    # https://help.aliyun.com/document_detail/56130.html
    port: 465
    protocol: smtp
    username: ${mail_qq_username}
    password: ${mail_qq_password}
    default-encoding: UTF-8 #默认编码格式
    test-connection: true
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          socketFactory:
            port: 465
            class: javax.net.ssl.SSLSocketFactory
            fallback: false

---
# 第三方登录
# 飞书
feishu:
  client:
    code_url_prefix: https://passport.feishu.cn/suite/passport/oauth/authorize
    token_url_prefix: https://passport.feishu.cn/suite/passport/oauth/token
    user_url_prefix: https://passport.feishu.cn/suite/passport/oauth/userinfo
    client_id: ${client_id}
    client_secret: ${client_secret}
    redirect_url_get_token: ${redirect_url_get_token}

# github
github:
  client_id: ${github_client_id}
  client_secret: ${github_client_secret}

# gitee